#( "========================================================================================================================================" )
#( "|                 ~~~~ Kate's Auto-open/unlatch/unlock/pick via MMapper ~~~~                                                           |" ) #
#( "| To use just type 'o<dir>' (eg 'on' or 'od') and let it do the rest. Reqires that your map knows the door name if secret.             |" ) #
#( "| To close, 'cl<dir>' and to close+lock, 'lo<dir>'                                                                                     |" ) #
#( "| This is mostly working. If doesn't work first time, just try again- sometimes it gets confused about whether it has finished or not  |" ) #
#( "|                                                                                                                                      |" ) #
#( "|                   * WARNING: Definitely illegal in PK! *                                                                             |" ) #
#( "========================================================================================================================================" )


#alias autoopen={ capopenon; #send ("_open "+$opendir) }
#action >+capturedoor ^--->open &1={#print; #var $autodoor=$1}
#alias capopenon={#action +doorlocked1; #action +doorlocked2; #action +doorlatched; #action +alreadyopen; #action +noexitthere; #action +opensuccess }
#alias capopenoff={ #action -doorlocked1; #action -doorlocked2; #action -doorlatched; #action -alreadyopen; #action -noexitthere; #action -opensuccess }
#action >-doorlocked1 ^It seems to be locked.={#print;#action +doorclick; #action +nokeyholes; #action +notgotkey; capopenoff; #print; #send ("_unlock "+$opendir) }
#action >-doorlocked2 ^They seem to be locked.={#print;#action +doorclick; #action +nokeyholes; #action +notgotkey; capopenoff; #print; #send ("_unlock "+$opendir) }
#action >-doorlatched ^It seems to be latched.={#print;#action +doorclick; #send ("_unlock "+$opendir) }
#action >-alreadyopen ^It's already open!={ capopenoff; #print ($BKGREEN+"$0"+$NORM) }
#action >-noexitthere ^You don't see any exit there.={ capopenoff;  #print ($BKYELLOW+"$0"+$NORM) }
#action >-opensuccess ^Ok.={ capopenoff; #print ($BKGREEN+"$0"+$NORM) }


#("You don't see any roof here.")
#("")

#action >-notgotkey ^You do not have the proper key for that.={#action +doorclick; #action +unabletopick; #action +pickyield1; #action +stoppick; #action -nokeyholes; #action -notgotkey; #print; #send ("_pick "+$opendir) }
#action >-nokeyholes ^You can't seem to spot any keyholes.={#action -nokeyholes; #action -notgotkey; #print ($BKYELLOW+"$0"+$NORM) }

#action >-stoppick ^You stop trying to pick the lock.={#action -doorclick; #action -unabletopick; #action -stoppick; #print ($BKYELLOW+"$0"+$NORM) }
#action >-unabletopick ^You seem to be unable to pick this lock.={#action -doorclick; #action -unabletopick; #action -stoppick; #print ($BKYELLOW+"$0"+$NORM) }
#action >-pickyield1 The lock finally yields to your skill.={#action -doorclick; #action -unabletopick; #action -stoppick; #print ($BKGREEN+"$0"+$NORM); #send ("_open "+$opendir) }

#action >-doorclick ^*click*={#action -doorclick; #action -unabletopick; #print ($BKGREEN+"$0"+$NORM); #send ("_open "+$opendir) }

#alias on={#var $opendir=n;autoopen}
#alias os={#var $opendir=s;autoopen}
#alias oe={#var $opendir=e;autoopen}
#alias ow={#var $opendir=w;autoopen}
#alias ou={#var $opendir=u;autoopen}
#alias od={#var $opendir=d;autoopen}
#alias xos={open exit south}
#alias xoe={open exit east}
#alias xow={open exit west}
#alias xou={open exit up}
#alias xod={open exit down}

#alias cloe={#send ("_close $1")}
#alias cln={cloe n}
#alias cle={cloe e}
#alias cls={cloe s}
#alias clw={cloe w}
#alias clu={cloe u}
#alias cld={cloe d}

#action >+enablelock ^You manage to enable the lock=#print ($BKMAGENTA+"You manage to ENABLE the lock."+$NORM)
#alias lo={cloe $1; #send ("_lock $1")}
#alias lon={lo n}
#alias loe={lo e}
#alias los={lo s}
#alias low={lo w}
#alias lou={lo u}
#alias lod={lo d}

#alias ul={unlock $1;open $1}
#alias uln={unlock exit n;open exit n}
#alias uls={unlock exit s;open exit s}
#alias ule={unlock exit e;open exit e}
#alias ulw={unlock exit w;open exit w}
#alias ulu={unlock exit u;open exit u}
#alias uld={unlock exit d;open exit d}


/// Auto-chest gac. Type "gc" and it does the rest. Experimental! (aka not working :p)

#var $autochest=("")
#alias gc={#action +clchest1; #action +clchest2; #action +chget1; #action +chget2; gf chest; gf sarcophagus}
#action %-clchest1 A(n)? ([a-zA-Z ]+ )?([a-zA-Z]+) is closed\.={#print;#var $autochest=("$4"); #action +lochest1; #send ("open "+$autochest); #exe ("gf "+$autochest); #action -clchest1 ; #action -clchest2}
#action >-clchest2 It is closed.={#print;#var $autochest=("$3"); #action +lochest1; #send ("open "+$autochest); #exe ("gf "+$autochest); #action -clchest1 ; #action -clchest2}
#action >-lochest1 It seems to be locked.={#print; #action +chwrongk1; #action +chclick1; #send ("unlock "+$autochest); #send ("open "+$autochest); #exe ("gf "+$autochest);  #action -lochest1}
#action >-chclick1 *click*={#print; #action -lochest1; #action -chwrongk1; #action -chclick1}
#action >-chwrongk1 You don't seem to have the proper key.={#print;#send ("pick "+$autochest); #send ("open "+$autochest);  #exe ("gf "+$autochest); #action -chwrongk1}
#action >-chget1 You get &1 from &2.={#print;#action -chget1;#action -chget2;#action -clchest1;#action -clchest2;#action -lochest1}
#action >-chget2 You can't find anything in={#print;#action -chget1;#action -chget2;#action -clchest1;#action -clchest2;#action -lochest1}

/// You can't find anything in the chest.
/// You don't see a sarcophagus to get things from.

/// The lock finally yields to your skill.
/// *click*


/// Redundant / junk?

#alias be={#action -autodoor;#action -autodoor2;#action -autodoor3;#print Exitchange stopped!}
#alias ub={#action +autodoor;#action +autodoor2;#action +autodoor3;#print Exitchange started!}
#action >+autodoor1 The &1 is closed={#print;#var $autodoor=$1}
#action >+autodoor2 The &1 is open={#print;#var $autodoor=$1}
#action >+autodoor3 The &1 seems to be closed={#print;#var $autodoor=$1}

#var $door={"exit"}
#var $opendir={"north"}
#alias o={ open $1; #var $door=$1}


#action >+opendoor1 &1 opens the &2.={#print ($MOBCOL+" $1 "+$NORM+$BKGREEN+"OPENS the $2."+$NORM); #add $2}
#action >+closdoor1 &1 closes the &2.={#print ($MOBCOL+" $1 "+$NORM+$BKRED+"CLOSES the $2."+$NORM); #add $2}
#action >+opdooroside The &1 is opened from the other side.={#print ($BOLD+"The "+$ULINE+"$1"+$NORM+$BOLD+" is OPENED from the other side!"+$NORM)}
#action >+doorcloses The &1 closes quietly.={#print ($BOLD+"The "+$ULINE+"$1"+$NORM+$BOLD+" closes quietly."+$NORM)}


/// Help any labelled person open stuff - WILL WORK FOR ENEMIES???
/// hdooron/off to make it automatic/not, in either case can use ho/hc
#var @hdoor=1
#alias hdooron=#var @hdoor=1
#alias hdooroff=#var @hdoor=0
#action >+openhelp1 &1 (&2) puts all &3 weight against the &4, trying to open={#print; #add $3; #if (@hdoor) open $4; #alias ho={open $4}}
#action >+hhdoor &1 (&2) puts all &3 weight against the &4, trying to close={#print; #add $3; #if (@hdoor) close $4; #alias hc={close $4}}

/// TODO: Tidy these a bit
#action >+39 The exit &1 blurs for a while={#print The exit -- $1 -- \033[1m\033[32m POPPED! \033[0m}
#action >+52 The exit &1 seems to blur for a while={#print The exit -- $1 -- was \033[1m\033[32m BLOCKED! \033[0m}
#action >+53a The &1 seems to blur for a while={#print The block on the -- $1 -- was \033[1m\033[32m BROKEN! \033[0m}
#action >+53b The &1 seem to blur for a while={#print The block on the -- $1 -- was \033[1m\033[32m BROKEN! \033[0m}



#print ($GREEN+" ==== autodoor.txt loaded ==== "+$NORM)
